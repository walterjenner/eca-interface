<?php
// $Id: top_searches.module,v 1.2.2.1 2008/12/29 07:37:09 zstolar Exp $

/**
 * Registering theming functions
 */
function top_searches_theme() {
  return array(
    'top_searches_block' => array(
      'file' => 'top_searches.module',
      'arguments' => array(
        'top_searches' => array(),
      ),
    ),
  );
}

/**
 * Implementation of hook_menu().
 */
function top_searches_menu() {
  $items = array();
  $items['admin/settings/top_searches'] = array(
    'access arguments' => array('administer blocks'),
    'title' => 'Top Searches',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('top_searches_admin_form'),
    'description' => 'General settings for the Top Searches module.',
  );
  $items['admin/settings/top_searches/clear'] = array(
    'access arguments' => array('administer blocks'),
    'title' => 'Top Searches',
    'type' => MENU_CALLBACK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('top_searches_form_clear_confirm'),
    'description' => 'General settings for the Top Searches module.',
  );
  return $items;
}

/**
 * Admin UI. Allow to limit number of items in the results list and allow to clear the results
 */
function top_searches_admin_form() {
  $form = array();

  $form['stats'] = array(
    '#type' => 'markup',
    '#value' => t('There are currently @rows items in the Top Searches tables.', array('@rows' => top_searches_count_rows())),
  );

  $form['top_searches_block'] = array(
      '#type' => 'fieldset',
      '#title' => t('Top Searches block configuration'),
  );

  $form['top_searches_block']['top_searches_block_items'] = array(
    '#type' => 'textfield',
    '#maxlength' => 2,
    '#size' => 2,
    '#title' => t('Maximum number of items to show in Top searches block'),
    '#default_value' => variable_get('top_searches_block_items', 50),
  );

  $form['top_searches_block']['top_searches_show_counters'] = array(
    '#type' => 'radios',
    '#title' => t('Should counters be presented next to the items in the block?'),
    '#default_value' => variable_get('top_searches_show_counters', 0),
    '#options' => array(t('No'), t('Yes')),
  );

  $form['clear_searches'] = array(
    '#type' => 'submit',
    '#value' => t('Reset search counters'),
    '#weight' => 10,
  );

  return system_settings_form($form);
}

function top_searches_admin_form_validate($form, &$form_state) {
  // In case we need to clear the DB table, redirect:
  if ($form_state['values']['op'] == t('Reset search counters')) {
    drupal_goto('admin/settings/top_searches/clear');
  }
}

function top_searches_form_clear_confirm() {
  return confirm_form(array(), t('Are you sure you want to reset the Top Searches counters?'), 'admin/settings/top_searches', t('This operation cannot be undone!'));
}

function top_searches_form_clear_confirm_submit(&$form, &$form_state) {
  if ($form['confirm']) {
    top_searches_form_clear();
  }
}

/**
 * Clears the Top Searches table
 */
function top_searches_form_clear() {
  // We first set the message, so we have the right number of rows
  drupal_set_message(t("The Top Searches counters were reset. @number records were deleted", array('@number' => top_searches_count_rows())));
  db_query("TRUNCATE {top_searches}");
  drupal_goto('admin/settings/top_searches');
}

/**
 * Implementation of hook_block().
 */
function top_searches_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':
      $blocks[0]['info'] = t('Top Searches');
      return $blocks;
    case 'view':
      switch ($delta) {
        case 0:
          $top_searches = top_searches_collect_results();
          if (count($top_searches)) {
            $block['subject'] = t("Top Searches");
            $block['content'] = theme('top_searches_block', $top_searches);
          }
          break;
      }
      return $block;
  }
}

function top_searches_form_alter(&$form, &$form_state, $form_id) {
  // Don't count admin searches (like admin/user/search)
  if (arg(0) == 'admin') return;

  // Only count node searches
  // TODO: allow different blocks for different types of seraches
  if (isset($form['module']['#value']) && $form['module']['#value'] != 'node') return;

  // We consider forms which have "search_box_form_submit" as '#submit' to be search forms:
  if (in_array($form_id, array('search_form', 'search_block_form', 'search_theme_form'))) {
    $form['#submit'][] = 'top_searches_catch_search_keys';
  }
}

function top_searches_catch_search_keys($form, $form_state) {
  switch ($form['form_id']['#value']) {
    case "search_block_form":
      $keys = $form_state['values']['search_block_form'];
      break;
    case "search_theme_form":
      $keys = $form_state['values']['search_theme_form'];
      break;
    case "search_form":
      $keys = $form_state['values']['keys'];
      break;
  }

  // Beautify the search phrase
  $keys = preg_replace("/[' ']{2,}/", ' ', ucwords(strtolower(trim($keys))));

  // Search the DB for existing keys:
  $results_qid = db_result(db_query("SELECT qid FROM {top_searches} WHERE q = '%s'", $keys));
  if ($results_qid) {
    db_query("UPDATE {top_searches} SET counter = (counter + 1) WHERE qid = %d", $results_qid);
  }
  else {
    db_query("INSERT INTO {top_searches} (q, counter) VALUES ('%s', %d)", $keys, 1);
  }
}

function top_searches_collect_results() {
  $result = db_query("SELECT q, counter FROM {top_searches} ORDER by counter DESC LIMIT %d", variable_get('top_searches_block_items', 50));
  $top_searches = array();

  while ($row = db_fetch_object($result)) {
    $top_searches[] = $row;
  }
  return $top_searches;
}

function top_searches_count_rows() {
  $result = db_result(db_query("SELECT COUNT(*) FROM {top_searches}"));
  return $result ? $result : '0';
}

function theme_top_searches_block($top_searches) {
  $show_counters = variable_get('top_searches_show_counters', 0);
  $output = '';
  foreach ($top_searches as $q) {
    $items[] = l($q->q, "search/node/". $q->q) . ($show_counters ? ' (' . $q->counter . ')' : '');
  }
  return theme('item_list', $items);
}
