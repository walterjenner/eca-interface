<?php
// $Id: comment_display.module,v 1.1 2008/10/26 15:20:04 sun Exp $

/**
 * @file
 * Prevents rendering of comments inside of nodes and provides them as separate
 * page elements instead.
 */

/**
 * Implementation of hook_menu_alter().
 *
 * Alters node.module's node view page callbacks to use ours instead.
 */
function comment_display_menu_alter(&$callbacks) {
  $callbacks['node/%node']['page callback'] = 'comment_display_node_page_view';
  $callbacks['node/%node/revisions/%/view']['page callback'] = 'comment_display_node_show';
}

/**
 * Generate a page displaying a single node, along with its comments.
 *
 * This is identically to node's implementation, but just does not append
 * comments of the node.
 */
function comment_display_node_show($node, $cid, $message = FALSE) {
  if ($message) {
    drupal_set_title(t('Revision of %title from %date', array('%title' => $node->title, '%date' => format_date($node->revision_timestamp))));
  }
  $output = node_view($node, FALSE, TRUE);

  // Note: Output of comments moved into comment_display_preprocess_page().

  // Update the history table, stating that this user viewed this node.
  node_tag_new($node->nid);

  return $output;
}

/**
 * Menu callback; view a single node.
 *
 * Use our callback instead of node_show().
 */
function comment_display_node_page_view($node, $cid = NULL) {
  drupal_set_title(check_plain($node->title));
  return comment_display_node_show($node, $cid);
}

/**
 * Implementation of hook_preprocess_page().
 *
 * Provide node comments, if available, as $comments variable to theme.
 */
function comment_display_preprocess_page(&$vars) {
  $vars['comments'] = '';
  if (function_exists('comment_render') && !empty($vars['node']) && $vars['node']->comment) {
    $arg2 = arg(2);
    $vars['comments'] .= comment_render($vars['node'], ($arg2 && is_numeric($arg2) ? $arg2 : NULL));
  }
}


